# For Paloalto

input {
    file {     
        path => ["PATH_TO_LOG"]
        sincedb_path => "/usr/share/logstash/data/sincedb"
        start_position => "beginning"
    }
}

filter {
    csv {
        source => "message"
        separator => ","
        autogenerate_column_names => true
    }
    if ([column4] == "TRAFFIC") {
        mutate {
            add_field => { "[data_stream][namespace]" => "traffic"}
        }
    } else if ([column5] == "url") {
        mutate {
            add_field => { "[data_stream][namespace]" => "url"}
        }
    } else if ([column5] == "wildfire") {
        mutate {
            add_field => { "[data_stream][namespace]" => "wildfire"}
        }
    } else if ([column4] == "AUTHENTICATION") {
        mutate {
            add_field => { "[data_stream][namespace]" => "authentication"}
        }
    } else if ([column4] == "DATA" and [column5] in ["data", "dlp", "dlp-non-file", "file"]) {
        mutate {
            add_field => { "[data_stream][namespace]" => "data"}
        }
    } else if ([column4] in ["START", "END"]) {
        mutate {
            add_field => { "[data_stream][namespace]" => "tunnel"}
        }
    } else if ([column4] == "THREAT") {
        mutate {
            add_field => { "[data_stream][namespace]" => "threat"}
        }
    } else if ([column4] == "SYSTEM") {
        mutate {
            add_field => { "[data_stream][namespace]" => "system"}
        }
    } else {
        mutate {
            add_field => { "[data_stream][namespace]" => "other"}
        }
    }
    if ([data_stream][namespace] == "traffic") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "source.ip"
                "column9" => "destination.ip"
                "column10" => "source.nat.ip"
                "column11" => "destination.nat.ip"
                "column12" => "rule.name"
                "column13" => "source.user.name"
                "column14" => "destination.user.name"
                "column15" => "network.application"
                "column16" => "observer.ingress.virtual_system"
                "column17" => "source.zone"
                "column18" => "destination.zone"
                "column21" => "event.action"
                "column22" => "labels.future_use"
                "column24" => "event.repeat"
                "column25" => "source.port"
                "column26" => "destination.port"
                "column27" => "source.nat.port"
                "column28" => "destination.nat.port"
                "column29" => "network.forwarded_ip"
                "column30" => "network.transport"
                "column31" => "event.action"
                "column32" => "network.bytes"
                "column33" => "source.bytes"
                "column34" => "destination.bytes"
                "column35" => "network.packets"
                "column36" => "event.start"
                "column37" => "event.duration"
                "column38" => "event.category"
                "column39" => "labels.future_use"
                "column42" => "source.geo.country_name"
                "column43" => "destination.geo.country_name"
                "column44" => "labels.future_use"
                "column45" => "source.packets"
                "column46" => "destination.packets"
                "column47" => "event.reason"
                "column52" => "observer.ingress.virtual_system_name"
                "column53" => "observer.name"
                "column54" => "event.provider"
                "column58" => "network.tunnel.tags"
                "column59" => "network.tunnel.parent_session_id"
                "column60" => "event.parent.start"
                "column61" => "network.tunnel.type"
                "column64" => "source.sctp.chunks_sent"
                "column65" => "destination.sctp.chunks_received"
                "column67" => "network.http.version"
                "column76" => "network.http.x_forwarded_for"
                "column77" => "source.device.category"
                "column78" => "source.device.profile"
                "column79" => "source.device.model"
                "column80" => "source.device.vendor"
                "column81" => "source.os.family"
                "column82" => "source.os.version"
                "column83" => "source.hostname"
                "column84" => "source.mac"
                "column85" => "destination.device.category"
                "column86" => "destination.device.profile"
                "column87" => "destination.device.model"
                "column88" => "destination.device.vendor"
                "column89" => "destination.os.family"
                "column90" => "destination.os.version"
                "column91" => "destination.domain"
                "column92" => "destination.mac"
                "column94" => "orchestrator.namespace"
                "column95" => "orchestrator.pod.name"
                "column96" => "source.risk.dynamic_list"
                "column97" => "destination.risk.dynamic_list"
                "column98" => "host.id"
                "column99" => "observer.serial_number"
                "column100" => "source.group.name"
                "column101" => "destination.group.name"
                "column103" => "event.created"
            }
        }
        if ([source.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.ip}" }}}
        if ([destination.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.ip}"}}}
        if ([source.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.nat.ip}"}}}
        if ([destination.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.nat.ip}"}}}
        
    } else if ([data_stream][namespace] == "url") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "source.ip"
                "column9" => "destination.ip"
                "column10" => "source.nat.ip"
                "column11" => "destination.nat.ip"
                "column12" => "rule.name"
                "column13" => "source.user.name"
                "column14" => "destination.user.name"
                "column15" => "network.application"
                "column16" => "observer.ingress.virtual_system"
                "column17" => "source.zone"
                "column18" => "destination.zone"
                "column21" => "event.action"
                "column22" => "labels.future_use"
                "column24" => "event.repeat"
                "column25" => "source.port"
                "column26" => "destination.port"
                "column27" => "source.nat.port"
                "column28" => "destination.nat.port"
                "column29" => "network.forwarded_ip"
                "column30" => "network.transport"
                "column31" => "event.action"
                "column32" => "url.original"
                "column33" => "threat.id"
                "column34" => "event.category"
                "column35" => "event.severity"
                "column36" => "network.direction"
                "column39" => "source.geo.country_name"
                "column40" => "destination.geo.country_name"
                "column41" => "labels.future_use"
                "column43" => "file.x_pcap_id"
                "column44" => "file.hash.md5"
                "column45" => "cloud.provider"
                "column46" => "url.original"
                "column47" => "user_agent.original"
                "column48" => "file.mime_type"
                "column49" => "network.forwarded_ip"
                "column50" => "http.request.referrer"
                "column51" => "email.from"
                "column52" => "email.subject"
                "column53" => "email.to"
                "column59" => "observer.ingress.virtual_system_name"
                "column60" => "observer.name"
                "column61" => "labels.future_use"
                "column64" => "http.request.method"
                "column66" => "network.tunnel.tags"
                "column67" => "network.tunnel.parent_session_id"
                "column68" => "event.parent.start"
                "column69" => "network.tunnel.type"
                "column70" => "threat.indicator.type"
                "column72" => "labels.future_use"
                "column76" => "url.category"
                "column78" => "network.http.version"
                "column80" => "network.http.x_forwarded_for"
                "column81" => "source.device.category"
                "column82" => "source.device.profile"
                "column83" => "source.device.model"
                "column84" => "source.device.vendor"
                "column85" => "source.os.family"
                "column86" => "source.os.version"
                "column87" => "source.hostname"
                "column88" => "source.mac"
                "column89" => "destination.device.category"
                "column90" => "destination.device.profile"
                "column91" => "destination.device.model"
                "column92" => "destination.device.vendor"
                "column93" => "destination.os.family"
                "column94" => "destination.os.version"
                "column95" => "destination.domain"
                "column96" => "destination.mac"
                "column98" => "orchestrator.namespace"
                "column99" => "orchestrator.pod.name"
                "column100" => "source.risk.dynamic_list"
                "column101" => "destination.risk.dynamic_list"
                "column102" => "host.id"
                "column103" => "observer.serial_number"
                "column105" => "source.group.name"
                "column106" => "destination.group.name"
                "column108" => "event.created"
                "column109" => "event.reason"
                "column110" => "event.justification"
            }
        }
        if ("%{source.ip}" =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.ip}" }}}
        if ("%{[destination][ip]}" =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.ip}"}}}
        if ([source.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.nat.ip}"}}}
        if ([destination.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.nat.ip}"}}}
        if ([url.original] =~ /.+/) {mutate {add_field => {"related.host" => "%{url.original}"}}}
        
    } else if ([data_stream][namespace] == "wildfire") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "source.ip"
                "column9" => "destination.ip"
                "column10" => "source.nat.ip"
                "column11" => "destination.nat.ip"
                "column12" => "rule.name"
                "column13" => "source.user.name"
                "column14" => "destination.user.name"
                "column15" => "network.application"
                "column16" => "observer.ingress.virtual_system"
                "column17" => "source.zone"
                "column18" => "destination.zone"
                "column21" => "event.action"
                "column22" => "labels.future_use"
                "column24" => "event.repeat"
                "column25" => "source.port"
                "column26" => "destination.port"
                "column27" => "source.nat.port"
                "column28" => "destination.nat.port"
                "column29" => "network.forwarded_ip"
                "column30" => "network.transport"
                "column31" => "event.action"
                "column32" => "url.original"
                "column33" => "threat.id"
                "column34" => "event.category"
                "column35" => "event.severity"
                "column36" => "network.direction"
                "column39" => "source.geo.location"
                "column40" => "destination.geo.location"
                "column41" => "labels.future_use"
                "column43" => "file.x_pcap_id"
                "column44" => "file.hash.md5"
                "column45" => "cloud.provider"
                "column46" => "url.original"
                "column47" => "user_agent.original"
                "column48" => "file.mime_type"
                "column49" => "network.forwarded_ip"
                "column50" => "http.request.referrer"
                "column51" => "email.from"
                "column52" => "email.subject"
                "column53" => "email.to"
                "column59" => "observer.ingress.virtual_system_name"
                "column60" => "observer.name"
                "column61" => "labels.future_use"
                "column64" => "http.request.method"
                "column66" => "network.tunnel.tags"
                "column67" => "network.tunnel.parent_session_id"
                "column68" => "event.parent.start"
                "column69" => "network.tunnel.type"
                "column70" => "threat.indicator.type"
                "column72" => "labels.future_use"
                "column76" => "url.category"
                "column78" => "network.http.version"
                "column80" => "network.http.x_forwarded_for"
                "column81" => "source.device.category"
                "column82" => "source.device.profile"
                "column83" => "source.device.model"
                "column84" => "source.device.vendor"
                "column85" => "source.os.family"
                "column86" => "source.os.version"
                "column87" => "source.hostname"
                "column88" => "source.mac"
                "column89" => "destination.device.category"
                "column90" => "destination.device.profile"
                "column91" => "destination.device.model"
                "column92" => "destination.device.vendor"
                "column93" => "destination.os.family"
                "column94" => "destination.os.version"
                "column95" => "destination.domain"
                "column96" => "destination.mac"
                "column98" => "orchestrator.namespace"
                "column99" => "orchestrator.pod.name"
                "column100" => "source.risk.dynamic_list"
                "column101" => "destination.risk.dynamic_list"
                "column102" => "host.id"
                "column103" => "observer.serial_number"
                "column105" => "source.group.name"
                "column106" => "destination.group.name"
                "column108" => "event.created"
                "column109" => "event.reason"
                "column110" => "event.justification"
            }
        }
        if ([source.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.ip}" }}}
        if ([destination.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.ip}"}}}
        if ([source.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.nat.ip}"}}}
        if ([destination.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.nat.ip}"}}}
        
    } else if ([data_stream][namespace] == "authentication") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "observer.ingress.virtual_system"
                "column9" => "source.ip"
                "column10" => "user.name"
                "column11" => "user.normalized_name"
                "column12" => "object.name"
                "column13" => "rule.name"
                "column14" => "event.repeat"
                "column15" => "user.id"
                "column16" => "observer.vendor"
                "column17" => "event.action"
                "column18" => "server.profile"
                "column19" => "event.description"
                "column20" => "client.type"
                "column21" => "event.type"
                "column22" => "event.risk_score"
                "column25" => "observer.hierarchy.level1"
                "column26" => "observer.hierarchy.level2"
                "column27" => "observer.hierarchy.level3"
                "column28" => "observer.hierarchy.level4"
                "column29" => "observer.ingress.virtual_system_name"
                "column30" => "observer.name"
                "column31" => "observer.ingress.virtual_system_id"
                "column33" => "rule.uuid"
                "column34" => "event.created"
                "column35" => "source.device.category"
                "column36" => "source.device.profile"
                "column37" => "source.device.model"
                "column38" => "source.device.vendor"
                "column39" => "source.os.family"
                "column40" => "source.os.version"
                "column41" => "source.hostname"
                "column42" => "source.mac"
                "column43" => "source.geo.region_name"
                "column44" => "labels.future_use"
                "column45" => "user_agent.original"
            }
        }
        if ([source][ip] =~ /.+/) {mutate {add_field => {"[source][ip]" => "%{related.ip}"}}}
    } else if ([data_stream][namespace] == "data") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "source.ip"
                "column9" => "destination.ip"
                "column10" => "source.nat.ip"
                "column11" => "destination.nat.ip"
                "column12" => "rule.name"
                "column13" => "source.user.name"
                "column14" => "destination.user.name"
                "column15" => "network.application"
                "column16" => "observer.ingress.virtual_system"
                "column17" => "source.zone"
                "column18" => "destination.zone"
                "column21" => "event.action"
                "column22" => "labels.future_use"
                "column24" => "event.repeat"
                "column25" => "source.port"
                "column26" => "destination.port"
                "column27" => "source.nat.port"
                "column28" => "destination.nat.port"
                "column29" => "network.forwarded_ip"
                "column30" => "network.transport"
                "column31" => "event.action"
                "column32" => "url.original"
                "column33" => "threat.id"
                "column34" => "event.category"
                "column35" => "event.severity"
                "column36" => "network.direction"
                "column39" => "source.geo.country_name"
                "column40" => "destination.geo.country_name"
                "column41" => "labels.future_use"
                "column43" => "file.x_pcap_id"
                "column44" => "file.hash.md5"
                "column45" => "cloud.provider"
                "column46" => "url.original"
                "column47" => "user_agent.original"
                "column48" => "file.mime_type"
                "column49" => "network.forwarded_ip"
                "column50" => "http.request.referrer"
                "column51" => "email.from"
                "column52" => "email.subject"
                "column53" => "email.to"
                "column59" => "observer.ingress.virtual_system_name"
                "column60" => "observer.name"
                "column61" => "labels.future_use"
                "column64" => "http.request.method"
                "column66" => "network.tunnel.tags"
                "column67" => "network.tunnel.parent_session_id"
                "column68" => "event.parent.start"
                "column69" => "network.tunnel.type"
                "column70" => "threat.indicator.type"
                "column72" => "labels.future_use"
                "column76" => "url.category"
                "column78" => "network.http.version"
                "column80" => "network.http.x_forwarded_for"
                "column81" => "source.device.category"
                "column82" => "source.device.profile"
                "column83" => "source.device.model"
                "column84" => "source.device.vendor"
                "column85" => "source.os.family"
                "column86" => "source.os.version"
                "column87" => "source.hostname"
                "column88" => "source.mac"
                "column89" => "destination.device.category"
                "column90" => "destination.device.profile"
                "column91" => "destination.device.model"
                "column92" => "destination.device.vendor"
                "column93" => "destination.os.family"
                "column94" => "destination.os.version"
                "column95" => "destination.domain"
                "column96" => "destination.mac"
                "column98" => "orchestrator.namespace"
                "column99" => "orchestrator.pod.name"
                "column100" => "source.risk.dynamic_list"
                "column101" => "destination.risk.dynamic_list"
                "column102" => "host.id"
                "column103" => "observer.serial_number"
                "column105" => "source.group.name"
                "column106" => "destination.group.name"
                "column108" => "event.created"
                "column109" => "event.reason"
                "column110" => "event.justification"
            }
        }
        if ([source.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.ip}" }}}
        if ([destination.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.ip}"}}}
        if ([source.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.nat.ip}"}}}
        if ([destination.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.nat.ip}"}}}
        
    } else if ([data_stream][namespace] == "tunnel") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "source.ip"
                "column9" => "destination.ip"
                "column10" => "source.nat.ip"
                "column11" => "destination.nat.ip"
                "column12" => "rule.name"
                "column13" => "source.user.name"
                "column14" => "destination.user.name"
                "column15" => "network.application"
                "column16" => "observer.ingress.virtual_system"
                "column17" => "source.zone"
                "column18" => "destination.zone"
                "column21" => "event.action"
                "column22" => "labels.future_use"
                "column24" => "event.repeat"
                "column25" => "source.port"
                "column26" => "destination.port"
                "column27" => "source.nat.port"
                "column28" => "destination.nat.port"
                "column29" => "network.forwarded_ip"
                "column30" => "network.transport"
                "column31" => "event.action"
                "column32" => "event.severity"
                "column35" => "source.geo.location"
                "column36" => "destination.geo.location"
                "column41" => "observer.ingress.virtual_system_name"
                "column42" => "observer.name"
                "column44" => "network.tunnel.tags"
                "column45" => "network.tunnel.parent_session_id"
                "column46" => "event.parent.start"
                "column47" => "network.tunnel.name"
                "column48" => "network.bytes"
                "column49" => "source.bytes"
                "column50" => "destination.bytes"
                "column51" => "network.packets"
                "column52" => "source.packets"
                "column53" => "destination.packets"
                "column60" => "event.reason"
                "column61" => "event.provider"
                "column62" => "event.start"
                "column63" => "event.duration"
                "column70" => "source.risk.dynamic_list"
                "column71" => "destination.risk.dynamic_list"
                "column72" => "event.created"
            }
        }
        if ([source.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.ip}" }}}
        if ([destination.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.ip}"}}}
        if ([source.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.nat.ip}"}}}
        if ([destination.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.nat.ip}"}}}
        
    } else if ([data_stream][namespace] == "threat") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "TIMESTAMP"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "source.ip"
                "column9" => "destination.ip"
                "column10" => "source.nat.ip"
                "column11" => "destination.nat.ip"
                "column12" => "rule.name"
                "column13" => "source.user.name"
                "column14" => "destination.user.name"
                "column15" => "network.application"
                "column16" => "observer.ingress.virtual_system"
                "column17" => "source.zone"
                "column18" => "destination.zone"
                "column21" => "event.action"
                "column22" => "labels.future_use"
                "column24" => "event.repeat"
                "column25" => "source.port"
                "column26" => "destination.port"
                "column27" => "source.nat.port"
                "column28" => "destination.nat.port"
                "column29" => "network.forwarded_ip"
                "column30" => "network.transport"
                "column31" => "event.action"
                "column32" => "url.original"
                "column33" => "threat.id"
                "column34" => "event.category"
                "column35" => "event.severity"
                "column36" => "network.direction"
                "column39" => "source.geo.location"
                "column40" => "destination.geo.location"
                "column41" => "labels.future_use"
                "column43" => "file.x_pcap_id"
                "column44" => "file.hash.md5"
                "column45" => "cloud.provider"
                "column46" => "url.original"
                "column47" => "user_agent.original"
                "column48" => "file.mime_type"
                "column49" => "network.forwarded_ip"
                "column50" => "http.request.referrer"
                "column51" => "email.from"
                "column52" => "email.subject"
                "column53" => "email.to"
                "column59" => "observer.ingress.virtual_system_name"
                "column60" => "observer.name"
                "column61" => "labels.future_use"
                "column64" => "http.request.method"
                "column66" => "network.tunnel.tags"
                "column67" => "network.tunnel.parent_session_id"
                "column68" => "event.parent.start"
                "column69" => "network.tunnel.type"
                "column70" => "threat.indicator.type"
                "column72" => "labels.future_use"
                "column76" => "url.category"
                "column78" => "network.http.version"
                "column80" => "network.http.x_forwarded_for"
                "column81" => "source.device.category"
                "column82" => "source.device.profile"
                "column83" => "source.device.model"
                "column84" => "source.device.vendor"
                "column85" => "source.os.family"
                "column86" => "source.os.version"
                "column87" => "source.hostname"
                "column88" => "source.mac"
                "column89" => "destination.device.category"
                "column90" => "destination.device.profile"
                "column91" => "destination.device.model"
                "column92" => "destination.device.vendor"
                "column93" => "destination.os.family"
                "column94" => "destination.os.version"
                "column95" => "destination.domain"
                "column96" => "destination.mac"
                "column98" => "orchestrator.namespace"
                "column99" => "orchestrator.pod.name"
                "column100" => "source.risk.dynamic_list"
                "column101" => "destination.risk.dynamic_list"
                "column102" => "host.id"
                "column103" => "observer.serial_number"
                "column105" => "source.group.name"
                "column106" => "destination.group.name"
                "column108" => "event.created"
                "column109" => "event.reason"
                "column110" => "event.justification"
            }
        }
        if ([source.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.ip}" }}}
        if ([destination.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.ip}"}}}
        if ([source.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{source.nat.ip}"}}}
        if ([destination.nat.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{destination.nat.ip}"}}}
        
    } else if ([data_stream][namespace] == "system") {
        mutate {
            rename => {
                "column1" => "labels.future_use"
                "column2" => "@timestamp"
                "column3" => "observer.serial_number"
                "column4" => "event.type"
                "column5" => "file.type"
                "column6" => "labels.future_use"
                "column7" => "event.created"
                "column8" => "observer.ingress.virtual_system"
                "column10" => "object.name"
                "column11" => "labels.future_use"
                "column12" => "labels.future_use"
                "column14" => "event.severity"
                "column15" => "event.description"
                "column22" => "observer.ingress.virtual_system_name"
                "column23" => "observer.name"
                "column24" => "labels.future_use"
                "column25" => "labels.future_use"
                "column26" => "event.created"
            }
        }
    }
    
    mutate {
        remove_field => ["message", "labels.future_use"]
    }
    ruby {
        code => "
            event.to_hash.keys.each do |key|
            if key.start_with?('column')
                event.remove(key)
            end
            end
        "
    }
    
    if [network.direction] == "client-to-server" {
        mutate { 
            copy => { "source.ip" => "client.ip"} 
            copy => { "destination.ip" => "server.ip"} 
        }
    } else if [network.direction] == "server-to-client" {
        mutate {
            copy => { "source.ip" => "server.ip"} 
            copy => { "destination.ip" => "client.ip"} 
        }
    }
    date {
        match => ["TIMESTAMP", "yyyy/MM/dd HH:mm:ss"]
        locale => "en"
        timezone => "Asia/Tokyo"
        tag_on_failure => ["_dateparsefailure"]
        target => "@timestamp"
        remove_field => ["TIMESTAMP"]
    }
}
output {
    elasticsearch {
        hosts => ["https://elastic.local:9200"]
        user => "elastic"
        password => 'PASS'
        
        data_stream => true
        data_stream_type => "logs"
        data_stream_dataset => "paloalto"
        
    }
}
