# For Postfix
input {
    file {
        mode => "tail"
                path => ["PATH_TO_LOG"]
        start_position => "beginning"
        sincedb_path => "/usr/share/logstash/data/sincedb"
        codec => multiline {
            pattern => "(^%{SYSLOGTIMESTAMP} %{IPORHOST} saslauthd\[%{NUMBER}\]:                 : auth failure|^%{SYSLOGTIMESTAMP} %{IPORHOST} postfix/smtpd\[%{NUMBER}\]: %{GREEDYDATA} SASL%{GREEDYDATA}authentication)"
            what => "previous"
        }
    }
}

filter {
    if ( "sasl_method=" in [message]){
        grok {
            match => {"message" => "%{SYSLOGTIMESTAMP:eventcreated} %{IPORHOST:hostname} postfix/smtpd\[%{NUMBER:pid}\]: %{WORD:mailqueid}: client=%{GREEDYDATA:clientaddress}\[%{IP:clientip}\], sasl_method=%{WORD:saslmethod}, sasl_username=%{WORD:userid}@%{GREEDYDATA:serveraddress}"}
                                                                                                                                }
        mutate {
            add_field => {"[event][type]" => "auth-success"}
        }
    }
    if ("Authentication failed for" in [message]){
        grok {
            match => {"message" => "%{SYSLOGTIMESTAMP:eventcreated} %{IPORHOST:hostname}%{GREEDYDATA} Authentication failed for %{GREEDYDATA}: %{GREEDYDATA:eventreason} \(%{NUMBER:eventreasoncode}\)%{GREEDYDATA}: auth failure: \[user=%{GREEDYDATA:userid}\] \[service=%{WORD:servicename}\] \[realm=%{IPORHOST:saslrealm}\] \[mech=%{WORD:saslmech}\]%{GREEDYDATA}: warning: %{IPORHOST:clientaddress}\[%{IP:clientip}\]%{GREEDYDATA}"}
                                                                                        }
        mutate {
            add_field => {"[event][type]" => "auth-failure"}
        }
    }
    
    # If access from Intra-net, set geoip manually
    if [clientip] =~ /^172\.21\./ {
            mutate { add_field      => { "[client][geoip][timezone]"      => "Asia/Tokyo" } }
            mutate { add_field      => { "[client][geoip][country_name]"  => "Intra" } }
            mutate { add_field      => { "[client][geoip][country_code2]" => "JP" } }
            mutate { add_field      => { "[client][geoip][country_code3]" => "JP" } }
            mutate { add_field    => { "[client][geoip][postal_code]"      => "100-0001" } }
            mutate { add_field    => { "[client][geoip][region_name]"      => "Tokyo" } }
            mutate { add_field    => { "[client][geoip][region_code]"      => "13" } }
            mutate { add_field    => { "[client][geoip][city_name]"      => "Chiyoda" } }
            mutate { add_field      => [ "[client][geoip][latitude]",        35.683 ] }
            mutate { convert      => [ "[client][geoip][latitude]",        "float" ] }
            mutate { add_field      => [ "[client][geoip][longitude]",       139.753 ] }
            mutate { convert      => [ "[client][geoip][longitude]",       "float" ] }
            mutate { replace      => { "[client][address]" => "Intra" } }
    } else {
        geoip {
            source => "clientip"
            target => "[client][geoip]"
            ecs_compatibility => disabled
        }
    }
            date {
        match => ["eventcreated", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601" ]
        locale => "en"
        timezone => "Asia/Tokyo"
        tag_on_failure => ["_dateparsefailure"]
        target => "@timestamp"
        remove_field => ["TIMESTAMP"]
    }
    mutate {
        lowercase => ["userid"]
        rename => { 
            "eventcreated" => "event.created"
            "eventreason" => "event.reason"
            "clientip" => "client.ip"
            "clientaddress" => "client.address"
            "userid" => "user.id"
            "serveraddress" => "server.address"
        }
        remove_field => ["message", "clientip"]
        add_tag => "mail-auth"
    }
}
output {
    elasticsearch {
        hosts => ["https://elastic.local:9200"]
        user => "elastic"
        password => 'PASS'
        data_stream => true
        data_stream_type => "logs"
        data_stream_dataset => "postfix"
        data_stream_namespace => "sasl_auth"
    }
}
