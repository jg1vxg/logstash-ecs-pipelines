
input {
    file {
        path => ["PATH_TO_LOG"]
        sincedb_path => "/usr/share/logstash/data/sincedb"
        start_position => "beginning"
    }
}
filter {
    if ("named" in [message]) {
        grok {
            match => {message => "%{SYSLOGTIMESTAMP:timestamp} %{IPORHOST:hostname} named%{DATA:TRASH}\: (?<eventcreated>%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME}) client %{DATA:dnsid} %{IP:clientip}#%{POSINT:clientport} \(%{DATA:dnsquestionname}\)\: view %{DATA:group.name}\: %{DATA:dnstype}\: %{DATA:dnsanswername} %{DATA:dnsanswerclass} %{DATA:dnsanswertype} %{DATA:dnsanswertag} \(%{IP:dnsrecursiveip}\)"}
            remove_field => "message"
        }
        date {
            match => [ "timestamp", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss" ]
            timezone => "Asia/Tokyo"
            tag_on_failure => ["_dateparsefailure"]
            target => "@timestamp"
            remove_field => ["timestamp"]
        }
        mutate {
            remove_field => "TRASH"
            rename => {
                "eventcreated" => "event.created"
                "hostname" => "host.name"
                "dnsid" => "dns.id"
                "clientip" => "client.ip"
                "clientport" => "client.port"
                "dnsquestionname" => "dns.question.name"
                "groupname" => "group.name"
                "dnsanswername" => "dns.answer.name"
                "dnsanswerclass" => "dns.answer.class"
                "dnsanswertype" => "dns.answer.type"
                "dnsanswerdata" => "dns.answer.data"
                "dnsanswertag" => "dns.answer.tag"
                "dnstype" => "dns.type"
                "dnsrecursiveip" => "dns.recursive.ip"
            }
        }
        if ([client.ip] =~ /.+/) {mutate {add_field => {"source.ip" => "%{client.ip}"}}}
        if ([client.ip] =~ /.+/) {mutate {add_field => {"related.ip" => "%{client.ip}"}}}
        if ([dns.question.name] =~ /.+/) {mutate {add_field => {"related.host" => "%{dns.question.name}"}}}
        if ([dns.answer.name] =~ /.+/) {mutate {add_field => {"related.host" => "%{dns.answer.name}"}}}
    }
}
output {
    elasticsearch {
        hosts => ["https://elastic.local:9200"]
        user => "elastic"
        password => 'PASS'
        data_stream => true
        data_stream_type => "logs"
        data_stream_dataset => "named"
        data_stream_namespace => "ns"
    }
}
